// Navitron
// ========
//
// Navitron is a tree list menu with sliding animations for
// drilling up or down a list item.
//
//
// Notes:
//
// 1. Used to absolute position the sliding panes.
// 2. Set min-height as fallback height since the panes
//    are all absolute positioned.
// 3. Avoid content bleed through.

.navitron {
    position: relative; // 1

    overflow: hidden;
    min-height: 200px; // 2

    background: white; // 3
}


// Navitron: Nested Panes Container + Sliding Panes
// ------------------------------------------------
//
// Notes:
//
// 1. Absolute positioned to `.navitron` to match the same container dimension

.navitron__nested,
.navitron__pane {
    position: absolute; // 1
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}


// Navitron: Nested Panes Container
// --------------------------------
//
// This is the container that holds all the nested sliding panes
// that are offsetted outside of Navitron wrapper.
//
//

// 1. Hide nested panes by default.
//
//    [Note] Must keep this as 'display: none' otherwise you can
//    crash the browser translating too many divs at once.

.navitron__nested {
    transform: translate3d(100%, 0, 0);

    .navitron__pane {
        display: none; // 1
    }
}


// Navitron: Sliding Pane
// ----------------------
//
// This is the sliding pane that gets animated in and out of view.
//
//
// Notes:
//
// 1. Avoid content bleed through.
// 2. [CSOPS-1371] Fix repaint issues on Android 4.1
// 3. [CSOPS-1371] We'll only show the shadows during pane animations.
//    Legacy Android browsers (4.0 - 4.1) have problems rendering position
//    absolute + overflow + box-shadow. However the Android rendering
//    bug isn't quite noticable during pane animation, so it should
//    be safe to keep this in.
// 4. It's worth noting that on legacy Android browsers (4.0 - 4.1), the panes
//    do not animate in smoothly with box-shadows applied. It's recommended to have
//    box-shadows disabled for legacy Android browsers for performance reasons.

.navitron__pane {
    overflow-x: hidden;
    overflow-y: auto;
    width: 100%;
    height: 100%;

    background: white; // 1
    box-shadow: none; // 3

    transform: translate3d(0, 0, 0);

    -webkit-overflow-scrolling: touch;
    -webkit-backface-visibility: hidden; // 2

    .navitron--is-animating & {
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.8); // 4
    }
}


// Navitron: Wrapper
// -----------------
//
// The Navitron Wrapper is responsible for applying a flex context that will layout
// the children inside (i.e. header, content and footer).
//
// This is added to the markup automatically by Navitron, so no need to include in
// any authored code.
//
//
// Notes:
//
// 1. The relevant flex children are the `.navitron__header`, `.navitron__footer`
//    and `.navitron__content`

.navitron__wrapper {
    display: flex; // 1
    flex-direction: column;
    overflow: hidden;
    height: 100%;
}


// Navitron: Header & Footer
// -------------------------
//
// The header is the top section of a Navitron pane. Typically holds a heading and
// a back button.
//
//
// Notes:
//
// 1. `display: flex` is coming from `.navitron__wrapper`
// 2. This prevents the header and footer from being forced to shrink relative to
//    other flex children (read: the content) â€“ in other words, the header and
//    footer will not shrink to accomodate the `.navitron__content` element

.navitron__header,
.navitron__footer {
    flex-shrink: 0; // 1, 2
}


// Navitron: Content
// -----------------
//
// This is the actual container for a Navitron's content. This is added automically
// by Navitron, so you do not need to use it in your code
//
//
// Notes:
//
// 1. `display: flex` is coming from `.navitron__wrapper`
// 2. This allows the content to grow or shrink as necessary based on content
//    and the header/footer

.navitron__content {
    overflow: auto;
    flex: 1; // 1, 2

    -webkit-overflow-scrolling: touch;
}


// Navitron: Hidden
// ----------------
//
// We polyfill the hidden attribute here to ensure it hides all content when
// applied. Navitron uses [hidden] to hide content from FOUT before the plugin is
// initialized.

[hidden] {
    display: none !important;
}
